#!/usr/bin/env sh

# dont ask where the meat comes from...
snag() {
  # clean
  rm -rf lua/

  # setup
  mkdir -p lua/hotpot
  cp deps/fennel.lua lua/hotpot/fennel.lua

  # don't tell them what's in the pot...
  fennel --compile dogfood.fnl > lua/hotpot.lua

  echo "snag: $(date) built"
}

# full fat, build a lua/ dir and throw out the dogfood
burger() {
  # clean
  rm -rf lua/

  # create destinations
  for dir in $(fd -td ".*" fnl)
  do
    mkdir -p ${dir/fnl/lua}
  done

  # build
  for src in $(fd -tf fnl fnl/)
  do
    case "$src" in
      # dont actually build macrofile
      *hotpot/macros.fnl*) echo "ignoring $src" ;;
      # add path so we can run from project root
      *) fennel --add-fennel-path "fnl/?.fnl" --compile $src > ${src//fnl/lua};;
    esac
  done

  # mkdir -p lua/hotpot
  cp deps/fennel.lua lua/hotpot/fennel.lua
  # don't need loader hook
  mv lua/hotpot/hotterpot.lua lua/hotpot.lua

  echo "burger: $(date) built"
  echo "NOTE: burger needs you to manually call .install()!"
}

# probably what you want
ipa() {
  # yeah looks good mate
  fd -tf fnl | entr -sc './barbie snag; ./barbie sauce'
}


# i mean, if you're offering...
draught() {
  # yeah thanks mate
  fd -tf fnl | entr -sc './barbie burger; ./barbie sauce'
}

# sha release and note it in canary file
sauce() {
  canary=$(find . -type f | grep -v "canary\|git" | xargs -d'\n' -P0 -n1 md5sum | sort -k 2 | md5sum)
  rm -rf canary/
  mkdir -p canary/
  touch canary/$canary
}

case "$1" in
  "sauce")
    sauce
    exit 0;;
  "snag")
    snag
    sauce
    exit 0;;
  "burger")
    burger
    sauce
    exit 0;;
  "ipa")
    ipa
    exit 0;;
  "draught")
    draught
    exit 0;;
  *)
    echo "$0 sauce   - write canary"
    echo "$0 snag    - build dogfood, also sauce"
    echo "$0 burger  - build full fat, also sauce"
    echo "$0 ipa     - watch snag, also sauce"
    echo "$0 draught - watch burger, also sauce";;
esac
